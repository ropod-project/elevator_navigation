#!/usr/bin/env python
import rospy
import actionlib

from ropod_ros_msgs.msg import NavElevatorAction, NavElevatorGoal
from ropod_ros_msgs.msg import Action

if __name__ == '__main__':
    rospy.init_node('elevator_navigation_test')
    try:
        elevator_nav_client = actionlib.SimpleActionClient('/ropod/take_elevator',
                                                           NavElevatorAction)
        elevator_nav_client.wait_for_server()

        goal = NavElevatorGoal()
        goal.action = Action()
        goal.action.action_id = '1234567890'
        goal.action.type = 'WAIT_FOR_ELEVATOR'
        goal.action.elevator.elevator_id = 121
        goal.action.elevator.door_id = 196
        goal.action.start_floor = 0
        goal.action.goal_floor = 2

        rospy.loginfo('[elevator_nav_client] Sending elevator nav goal\n{0}'.format(goal))
        elevator_nav_client.send_goal(goal)

        rospy.loginfo('[elevator_nav_client] Waiting for elevator navigation result')
        elevator_nav_client.wait_for_result()

        rospy.loginfo('[elevator_nav_client] Result\n{0}'.format(elevator_nav_client.get_result()))
    except (KeyboardInterrupt, SystemExit):
        print('{0} interrupted; exiting...'.format(elevator_navigation_node.name))
        elevator_navigation_node.stop()
